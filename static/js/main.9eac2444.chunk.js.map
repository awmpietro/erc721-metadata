{"version":3,"sources":["redux/reducers/contracts.js","redux/reducers/index.js","redux/actionTypes.js","redux/store.js","layout/header.js","layout/main.js","redux/utils.js","redux/actions.js","components/Spin.js","pages/contracts/Erc721.js","App.js","serviceWorker.js","index.js"],"names":["initialState","itf","data","loading","combineReducers","contracts","state","action","type","payload","store","applyMiddleware","thunk","multi","promise","createStore","rootReducer","Header","className","to","Component","connect","dispatch","bindActionCreators","Main","component","rest","render","matchProps","Container","fluid","errorHandler","error","response","message","call","address","tokenId","handleLoading","axios","post","process","contractAddress","funcName","then","metadata","JSON","parse","tokenName","name","symbol","totalSupply","ownerOf","console","log","catch","isLoading","Erc721","props","showMetadata","item","keys","Object","forEach","key","index","push","validURL","str","RegExp","test","href","target","rel","handleSubmit","bind","e","preventDefault","this","Spin","role","Row","Col","md","lg","xs","sm","onSubmit","placeholder","value","onChange","setState","required","undefined","basename","path","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9eac2444.chunk.js","sourcesContent":["import {\n  GET_INTERFACE,\n  CALL,\n  LOADING\n} from \"../actionTypes\";\n\nconst initialState = {\n\n  itf:[],\n  data: null,\n  loading: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_INTERFACE:\n      return { ...state, itf: action.payload.itf}\n    case CALL:\n      return { ...state, data: action.payload.data, loading: action.payload.loading}\n    case LOADING:\n      return { ...state, data: action.payload.loading}\n    default:\n      return state;\n  }\n}","import { combineReducers } from \"redux\";\n\nimport contracts from \"./contracts\";\n\nexport default combineReducers({ contracts });","export const GET_INTERFACE = \"GET_INTERFACE\";\nexport const CALL = \"CALL\";\nexport const LOADING = \"LOADING\";","import { createStore, applyMiddleware } from \"redux\";\nimport promise from 'redux-promise'\nimport multi from 'redux-multi'\nimport thunk from 'redux-thunk'\n\nimport rootReducer from \"./reducers\";\n\nconst store = applyMiddleware(thunk, multi, promise)(createStore)(rootReducer)\n\nexport default store;","import React, { Component } from 'react';\nimport { Link} from 'react-router-dom';\n\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from 'redux';\n// import { logout } from '../redux/actions';\n\nclass Header extends Component {\n\n    // logout = () => {\n    //     return this.props.logout();\n    // }\n\n    render() {\n        return (\n            <nav className=\"navbar navbar-dark sticky-top bg-dark flex-md-nowrap p-0\">\n                <Link to=\"/contracts/erc721\" className=\"navbar-brand col-sm-3 col-md-2 mr-0\">Get ERC721 Token Metadata</Link>\n                {/* <ul className=\"navbar-nav px-3\">\n                    <li className=\"nav-item text-nowrap\">\n                        <Link to=\"#\" className=\"nav-link\">Log out</Link>\n                    </li>\n                </ul> */}\n            </nav>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators( {}, dispatch)\n\nexport default connect(null, mapDispatchToProps)(Header)","import React from 'react';\nimport { Route } from 'react-router-dom';\n//import { Route, Redirect } from 'react-router-dom';\nimport { Container} from 'reactstrap';\n// import { connect } from \"react-redux\";\n\nimport Header from './header';\n// import Sidebar from './sidebar';\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport '../assets/css/spin.css';\nimport '../assets/css/layout.css';\nimport 'bootstrap/dist/js/bootstrap.min'\n\nconst Main = ({component: Component, ...rest}) => {\n  //const { isLoggedIn } = rest;\n  return (\n    <Route {...rest} render={matchProps => (\n      //isLoggedIn ? \n        \n        <div>\n          <Header/>\n          <Container fluid={true}>\n            {/* <Sidebar /> */}\n            <Component {...matchProps} />\n          </Container>\n        </div>\n      //:\n      //<Redirect to='/' />\n    )} />\n  )\n};\n\n\n// const mapStateToProps = state => ({isLoggedIn: state.admin.isLoggedIn})\n// export default connect(mapStateToProps)(Main)\n\nexport default Main","const errorHandler = error => {\n  if (error.response) {\n    return error.response.data;\n  } else {\n    return error.message;\n  }\n};\n\nexport { errorHandler };\n","import axios from \"axios\";\nimport { GET_INTERFACE, CALL, LOADING } from \"./actionTypes\";\nimport { errorHandler } from \"./utils\";\n\nexport const getInterface = data => {\n  return dispatch => {\n    axios\n      .get(`${process.env.REACT_APP_URL}/contracts/getInterface`)\n      .then(response => {\n        dispatch({ type: GET_INTERFACE, payload: { itf: response.data } });\n      })\n      .catch(error => {});\n  };\n};\n\nexport const call = (address, tokenId) => {\n  return dispatch => {\n    handleLoading(true);\n    axios\n      .post(`${process.env.REACT_APP_URL}/contracts/call`, {\n        contractAddress: address,\n        funcName: \"tokenURI\",\n        tokenId: tokenId,\n      })\n      .then(response => {\n        const data = {};\n        data.metadata = JSON.parse(response.data.metadata);\n        data.tokenName = response.data.name;\n        data.symbol = response.data.symbol;\n        data.totalSupply = response.data.totalSupply;\n        data.ownerOf = response.data.ownerOf;\n        console.log(data);\n\n        dispatch({ type: CALL, payload: { data: data, loading: false } });\n      })\n      .catch(error => {\n        dispatch({\n          type: CALL,\n          payload: { data: errorHandler(error) },\n        });\n      });\n  };\n};\n\nexport const handleLoading = isLoading => {\n  return dispatch => {\n    dispatch({ type: LOADING, payload: { loading: isLoading } });\n  };\n};\n","import React from 'react';\n\nexport default () => {\n    return (\n        <div className=\"loading\">Loading&#8230;</div>\n    )\n}","import React, { Component } from \"react\";\nimport { Col, Row } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\nimport { call, handleLoading } from \"../../redux/actions\";\nimport Spin from \"../../components/Spin\";\n\nclass Erc721 extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.showMetadata = this.showMetadata.bind(this);\n    this.validURL = this.validURL.bind(this);\n    this.state = { address: \"\", tokenId: \"\" };\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.call(this.state.address, this.state.tokenId);\n  }\n\n  // renderParams(meth) {\n  //   const myParams = []\n  //   if(meth.params.length > 0) {\n  //     for(let params of meth.params) {\n  //       myParams.push(\n  //         <Col md={6} lg={6} xs={12} sm={12} key={params}>\n  //           <input name={params} placeholder = {params} type=\"text\" className=\"form-control\"  />\n  //         </Col>\n  //       )\n  //     }\n  //     return myParams;\n  //   }\n  //   return null;\n  // }\n\n  // renderMethods() {\n  //   const {itf} = this.props;\n  //   const rows = []\n  //   for (let meth of itf) {\n  //       rows.push(\n  //       <Row key={meth.name}>\n  //         <Col md={12} lg={12} xs={12} sm={12}><h6>Function:</h6></Col>\n  //         <Col md={12} lg={12} xs={12} sm={12}>\n  //             <div className=\"form-group\">\n  //                 <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleSubmit(meth.name, []) }>{meth.name}</button>\n  //             </div>\n  //         </Col>\n  //         <Col md={12} lg={12} xs={12} sm={12}><h6>Params:</h6></Col>\n  //         {this.renderParams(meth) ? this.renderParams(meth) : <Col md={12} lg={12} xs={12} sm={12}><p>No Params</p></Col>}\n  //         <Col md={12} lg={12} xs={12} sm={12}><hr/></Col>\n  //       </Row>\n  //       )\n  //   }\n  //   return rows\n  // }\n\n  showMetadata = item => {\n    const metadata = item.metadata;\n    const keys = Object.keys(metadata);\n    const data = [];\n    keys.forEach((key, index) => {\n      return data.push(\n        <p>\n          <span className=\"font-weight-bold\">{`${key}: `}</span>\n          {this.validURL(metadata[key])}\n        </p>\n      );\n    });\n    return data;\n  };\n\n  validURL = str => {\n    var pattern = new RegExp(\n      \"^(https?:\\\\/\\\\/)?\" + // protocol\n        \"((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|\" + // domain name\n        \"((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))\" + // OR ip (v4) address\n        \"(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*\" + // port and path\n        \"(\\\\?[;&a-z\\\\d%_.~+=-]*)?\" + // query string\n        \"(\\\\#[-a-z\\\\d_]*)?$\",\n      \"i\"\n    ); // fragment locator\n    if (!!pattern.test(str)) {\n      return (\n        <a href={str} target=\"_blank\" rel=\"noopener noreferrer\">\n          {str}\n        </a>\n      );\n    }\n    return str;\n  };\n\n  render() {\n    if (this.props.loading) {\n      return <Spin />;\n    }\n    const item = this.props.data;\n    return (\n      <main role=\"main\" className=\"col-md-12 ml-sm-auto col-lg-12 pt-3 px-4\">\n        <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pb-2 mb-3 border-bottom\">\n          <h1 className=\"h2\">Get ERC721 Token Metadata</h1>\n        </div>\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <Row>\n              <Col md={12} lg={12} xs={12} sm={12}>\n                <form onSubmit={this.handleSubmit}>\n                  <Row>\n                    <Col md={6} lg={6} xs={12} sm={12}>\n                      <div className=\"form-group\">\n                        <input\n                          name=\"\"\n                          placeholder=\"Contract Address *\"\n                          type=\"text\"\n                          className=\"form-control\"\n                          value={this.state.address}\n                          onChange={e =>\n                            this.setState({ address: e.target.value })\n                          }\n                          required\n                        />\n                      </div>\n                    </Col>\n                    <Col md={6} lg={6} xs={12} sm={12}>\n                      <div className=\"form-group\">\n                        <input\n                          name=\"\"\n                          placeholder=\"Token Id *\"\n                          type=\"text\"\n                          className=\"form-control\"\n                          value={this.state.tokenId}\n                          onChange={e =>\n                            this.setState({ tokenId: e.target.value })\n                          }\n                          required\n                        />\n                      </div>\n                    </Col>\n                    <Col md={12} lg={12} xs={12} sm={12}>\n                      <hr />\n                    </Col>\n                    <Col md={12} lg={12} xs={12} sm={12}>\n                      <div className=\"form-group\">\n                        <button type=\"submit\" className=\"btn btn-primary\">\n                          Send\n                        </button>\n                      </div>\n                    </Col>\n                  </Row>\n                </form>\n              </Col>\n            </Row>\n            {typeof item === \"object\" && item !== null && item !== undefined ? (\n              <Row>\n                <Col md={12} lg={12} xs={12} sm={12}>\n                  <hr />\n                </Col>\n                <Col md={12} lg={12} xs={12} sm={12}>\n                  <Row>\n                    <Col md={6} lg={6} xs={12}>\n                      <h5>ERC721 info </h5>\n                      <p>\n                        <span className=\"font-weight-bold\">\n                          Token Contract Address:{\" \"}\n                        </span>\n                        <a\n                          href={`https://etherscan.io/address/${this.state.address}`}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          {this.state.address}\n                        </a>\n                      </p>\n                      <p>\n                        <span className=\"font-weight-bold\">Token Name: </span>\n                        <a\n                          href={`https://etherscan.io/token/${this.state.address}`}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          {item.tokenName\n                            ? item.tokenName\n                            : \"No information provided\"}\n                        </a>\n                      </p>\n                      <p>\n                        <span className=\"font-weight-bold\">Token Symbol: </span>\n                        {item.symbol ? item.symbol : \"No information provided\"}\n                      </p>\n                      <p>\n                        <span className=\"font-weight-bold\">\n                          Token Total Supply:{\" \"}\n                        </span>\n                        {item.totalSupply\n                          ? item.totalSupply\n                          : \"No information provided\"}\n                      </p>\n                    </Col>\n                    <Col md={6} lg={6} xs={12}>\n                      <h5>Token info </h5>\n                      <p>\n                        <span className=\"font-weight-bold\">Item Id: </span>\n                        <a\n                          href={`https://etherscan.io/token/${this.state.address}?a=${this.state.tokenId}`}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          {this.state.tokenId}\n                        </a>\n                      </p>\n                      <p>\n                        <span className=\"font-weight-bold\">Item Owner: </span>\n                        <a\n                          href={`https://etherscan.io/address/${item.ownerOf}`}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          {item.ownerOf\n                            ? item.ownerOf\n                            : \"No information provided\"}\n                        </a>\n                      </p>\n                      <hr />\n                      <h5>Token metadata</h5>\n                      {this.showMetadata(item)}\n                    </Col>\n                  </Row>\n                </Col>\n              </Row>\n            ) : (\n              <Row>\n                <Col md={12} lg={12} xs={12} sm={12}>\n                  <hr />\n                </Col>\n                <Col md={12} lg={12} xs={12}>\n                  <h6>{item}</h6>\n                </Col>\n              </Row>\n            )}\n          </div>\n        </div>\n      </main>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  data: state.contracts.data,\n  loading: state.contracts.loading,\n});\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators({ call, handleLoading }, dispatch);\nexport default connect(mapStateToProps, mapDispatchToProps)(Erc721);\n","import React from 'react';\nimport { BrowserRouter, Switch } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from 'redux';\n\n// import{ load } from \"./redux/actions\";\nimport Main from './layout/main';\n\nimport Erc721 from './pages/contracts/Erc721'\n\n//import Login from './pages/login/Login';\n\n const App = props => {\n\n    return (\n        <BrowserRouter basename=\"/erc721-metadata\" >\n            <Switch>\n                <Main path='/' component={Erc721} />\n                <Main path='/contracts/erc721' component={Erc721} />\n             </Switch>\n        </BrowserRouter>\n    )\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators( {}, dispatch)\n\nexport default connect(null, mapDispatchToProps)(App)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\n\nimport store from \"./redux/store\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}