{"version":3,"sources":["redux/reducers/contracts.js","redux/reducers/index.js","redux/actionTypes.js","redux/store.js","layout/header.js","layout/main.js","redux/actions.js","components/Spin.js","pages/contracts/Erc721.js","App.js","serviceWorker.js","index.js"],"names":["initialState","itf","data","combineReducers","contracts","state","action","type","payload","store","applyMiddleware","thunk","multi","promise","createStore","rootReducer","Header","className","to","Component","connect","dispatch","bindActionCreators","Main","component","rest","render","matchProps","Container","fluid","call","address","tokenId","axios","post","process","then","response","JSON","parse","metadata","tokenName","name","symbol","totalSupply","catch","error","message","Erc721","props","handleSubmit","bind","e","preventDefault","this","loading","Spin","item","role","Row","Col","md","lg","xs","sm","onSubmit","placeholder","value","onChange","setState","target","required","undefined","href","rel","item_description","item_image","title","basename","path","exact","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0ec8c062.chunk.js","sourcesContent":["import {\n  GET_INTERFACE,\n  CALL\n} from \"../actionTypes\";\n\nconst initialState = {\n\n  itf:[],\n  data: null\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_INTERFACE:\n      return { ...state, itf: action.payload.itf}\n    case CALL:\n      return { ...state, data: action.payload.data}\n    default:\n      return state;\n  }\n}","import { combineReducers } from \"redux\";\n\nimport contracts from \"./contracts\";\n\nexport default combineReducers({ contracts });","export const GET_INTERFACE = \"GET_INTERFACE\";\nexport const CALL = \"CALL\";","import { createStore, applyMiddleware } from \"redux\";\nimport promise from 'redux-promise'\nimport multi from 'redux-multi'\nimport thunk from 'redux-thunk'\n\nimport rootReducer from \"./reducers\";\n\nconst store = applyMiddleware(thunk, multi, promise)(createStore)(rootReducer)\n\nexport default store;","import React, { Component } from 'react';\nimport { Link} from 'react-router-dom';\n\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from 'redux';\n// import { logout } from '../redux/actions';\n\nclass Header extends Component {\n\n    // logout = () => {\n    //     return this.props.logout();\n    // }\n\n    render() {\n        return (\n            <nav className=\"navbar navbar-dark sticky-top bg-dark flex-md-nowrap p-0\">\n                <Link to=\"/contracts/erc721\" className=\"navbar-brand col-sm-3 col-md-2 mr-0\">Get ERC721 Token Metadata</Link>\n                {/* <ul className=\"navbar-nav px-3\">\n                    <li className=\"nav-item text-nowrap\">\n                        <Link to=\"#\" className=\"nav-link\">Log out</Link>\n                    </li>\n                </ul> */}\n            </nav>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators( {}, dispatch)\n\nexport default connect(null, mapDispatchToProps)(Header)","import React from 'react';\nimport { Route } from 'react-router-dom';\n//import { Route, Redirect } from 'react-router-dom';\nimport { Container} from 'reactstrap';\n// import { connect } from \"react-redux\";\n\nimport Header from './header';\n// import Sidebar from './sidebar';\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport '../assets/css/spin.css';\nimport '../assets/css/layout.css';\nimport 'bootstrap/dist/js/bootstrap.min'\n\nconst Main = ({component: Component, ...rest}) => {\n  //const { isLoggedIn } = rest;\n  return (\n    <Route {...rest} render={matchProps => (\n      //isLoggedIn ? \n        \n        <div>\n          <Header/>\n          <Container fluid={true}>\n            {/* <Sidebar /> */}\n            <Component {...matchProps} />\n          </Container>\n        </div>\n      //:\n      //<Redirect to='/' />\n    )} />\n  )\n};\n\n\n// const mapStateToProps = state => ({isLoggedIn: state.admin.isLoggedIn})\n// export default connect(mapStateToProps)(Main)\n\nexport default Main","import axios from 'axios';\nimport {GET_INTERFACE, CALL} from './actionTypes';\n\nexport const getInterface = data => {\n    return (dispatch) => {\n        axios.get(`${process.env.REACT_APP_URL}/contracts/getInterface`).then(response => {\n            dispatch( {type: GET_INTERFACE, payload: {itf: response.data} } )\n        }).catch((error) => {\n        \n        })\n    }\n}\n\nexport const call = (address, tokenId) => {\n    return (dispatch) => {\n        axios.post(`${process.env.REACT_APP_URL}/contracts/call`, {\"contractAddress\" : address, \"funcName\" : \"tokenURI\", \"tokenId\" : tokenId})\n        .then(response => {\n            let data = \"\";\n            data = JSON.parse(response.data.metadata);\n            data.tokenName = response.data.name;\n            data.symbol = response.data.symbol;\n            data.totalSupply = response.data.totalSupply;\n            dispatch( {type: CALL, payload: {data} } )\n        }).catch((error) => {\n            dispatch( {type: CALL, payload: {data: error.message} } )\n        })\n    }\n}","import React from 'react';\n\nexport default () => {\n    return (\n        <div className=\"loading\">Loading&#8230;</div>\n    )\n}","import React, { Component } from 'react';\nimport { Col, Row } from 'reactstrap';\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from 'redux';\n\nimport { call} from '../../redux/actions';\nimport Spin from '../../components/Spin';\n\nclass Erc721 extends Component {\n\n  constructor(props) {\n      super(props);\n      this.handleSubmit = this.handleSubmit.bind(this);\n      this.state = {address: \"\", tokenId: \"\"}\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.call(this.state.address, this.state.tokenId)\n  }\n\n  // renderParams(meth) {\n  //   const myParams = []\n  //   if(meth.params.length > 0) {\n  //     for(let params of meth.params) {\n  //       myParams.push(\n  //         <Col md={6} lg={6} xs={12} sm={12} key={params}>\n  //           <input name={params} placeholder = {params} type=\"text\" className=\"form-control\"  />\n  //         </Col>\n  //       )\n  //     }\n  //     return myParams;\n  //   }\n  //   return null;\n  // }\n\n  // renderMethods() {\n  //   const {itf} = this.props;\n  //   const rows = []\n  //   for (let meth of itf) {\n  //       rows.push(\n  //       <Row key={meth.name}>\n  //         <Col md={12} lg={12} xs={12} sm={12}><h6>Function:</h6></Col>\n  //         <Col md={12} lg={12} xs={12} sm={12}>\n  //             <div className=\"form-group\">\n  //                 <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleSubmit(meth.name, []) }>{meth.name}</button>\n  //             </div>\n  //         </Col>\n  //         <Col md={12} lg={12} xs={12} sm={12}><h6>Params:</h6></Col>\n  //         {this.renderParams(meth) ? this.renderParams(meth) : <Col md={12} lg={12} xs={12} sm={12}><p>No Params</p></Col>}\n  //         <Col md={12} lg={12} xs={12} sm={12}><hr/></Col>\n  //       </Row>\n  //       )\n  //   }\n  //   return rows\n  // }\n\n  render() {\n    if(this.props.loading) {\n      return <Spin />\n    }\n    const item = this.props.data;\n    return (\n      <main role=\"main\" className=\"col-md-12 ml-sm-auto col-lg-12 pt-3 px-4\">\n          <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pb-2 mb-3 border-bottom\">\n              <h1 className=\"h2\">Get ERC721 Token Metadata</h1>\n          </div>\n            <div className=\"card\">\n              <div className=\"card-body\">\n                  <Row>\n                    <Col md={12} lg={12} xs={12} sm={12}>\n                      <form onSubmit={this.handleSubmit}>\n                          <Row>\n                            <Col md={6} lg={6} xs={12} sm={12}>\n                              <div className=\"form-group\">\n                                <input name=\"\" placeholder = \"Contract Address *\" type=\"text\" className=\"form-control\" value={this.state.address} onChange={ e => this.setState({address: e.target.value })} required />\n                              </div>\n                            </Col>\n                            <Col md={6} lg={6} xs={12} sm={12}>\n                              <div className=\"form-group\"> \n                                <input name=\"\" placeholder = \"Token Id *\" type=\"text\" className=\"form-control\" value={this.state.tokenId} onChange={ e => this.setState({tokenId: e.target.value })} required  />\n                              </div>\n                            </Col>\n                            <Col md={12} lg={12} xs={12} sm={12}><hr/></Col>\n                            <Col md={12} lg={12} xs={12} sm={12}>\n                              <div className=\"form-group\"> \n                                <button type=\"submit\" className=\"btn btn-primary\">Send</button>\n                              </div>\n                            </Col>\n                          </Row>\n                      </form>\n                    </Col>\n                  </Row>\n                  {typeof item === 'object' && item !== null && item !== undefined ?\n                  <Row>\n                    <Col md={12} lg={12} xs={12} sm={12}><hr/></Col>\n                    <Col md={12} lg={12} xs={12} sm={12}>\n                      <Row>\n                        <Col md={6} lg={6} xs={12}>\n                          <h5>Token Info </h5>\n                            <p><span className=\"font-weight-bold\">Token Contract Address: </span><a href={`https://etherscan.io/address/${this.state.address}`} target=\"_blank\" rel=\"noopener noreferrer\">{this.state.address}</a></p>\n                            <p><span className=\"font-weight-bold\">Token Name: </span><a href={`https://etherscan.io/token/${this.state.address}`} target=\"_blank\" rel=\"noopener noreferrer\">{item.tokenName}</a></p>\n                            <p><span className=\"font-weight-bold\">Token Symbol: </span>{item.symbol}</p>\n                            <p><span className=\"font-weight-bold\">Token Total Supply: </span>{item.totalSupply}</p>\n                        </Col>\n                        <Col md={6} lg={6} xs={12}>\n                          <h5>Token Metadata </h5>\n                          <p><span className=\"font-weight-bold\">Item Id: </span><a href={`https://etherscan.io/token/${this.state.address}?a=${this.state.tokenId}`} target=\"_blank\" rel=\"noopener noreferrer\">{this.state.tokenId}</a></p>\n                          <p><span className=\"font-weight-bold\">Item Name: </span>{item.name}</p>\n                          <p><span className=\"font-weight-bold\">Item Description: </span>{item.item_description}</p>\n                          <p><span className=\"font-weight-bold\">Item Image: </span><a href={item.item_image} title={item.name} target=\"_blank\" rel=\"noopener noreferrer\">{item.item_image}</a></p>\n                        </Col>\n                      </Row>\n                    </Col>\n                  </Row>\n                  :\n                  <Row>\n                    <Col md={12} lg={12} xs={12} sm={12}><hr/></Col>\n                    <Col md={12} lg={12} xs={12}>\n                        <h6>{item}</h6>\n                    </Col>\n                  </Row>\n                  }\n            </div>\n          </div>\n      </main>\n    );\n  }\n}\nconst mapStateToProps = state => ({data: state.contracts.data})\nconst mapDispatchToProps = dispatch => bindActionCreators( { call }, dispatch)\nexport default connect(mapStateToProps, mapDispatchToProps)(Erc721)","import React from 'react';\nimport { BrowserRouter, Switch } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from 'redux';\n\n// import{ load } from \"./redux/actions\";\nimport Main from './layout/main';\n\nimport Erc721 from './pages/contracts/Erc721'\n\n//import Login from './pages/login/Login';\n\n const App = props => {\n\n    return (\n        <BrowserRouter basename=\"/\" >\n            <Switch>\n                <Main path='/' exact={true} component={Erc721} />\n                <Main path='/contracts/erc721' component={Erc721} />\n             </Switch>\n        </BrowserRouter>\n    )\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators( {}, dispatch)\n\nexport default connect(null, mapDispatchToProps)(App)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\n\nimport store from \"./redux/store\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}